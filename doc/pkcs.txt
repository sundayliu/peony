jarsigner -keystore ec.keystore -keypass 123456 -storepass 123456 -signedjar signed.apk in.apk alias

DER格式采用ASN1的DER标准格式

openssl pkcs7 [-inform PEM|DER] [-outform PEM|DER] [-in filename]
    [-out filename] [-print_certs] [-text] [-noout] 
    
PKCS #7

.p7b/.p7r
加密信息语法标准
1、p7b以树状展示证书链，不含私钥
2、p7r为CA对证书请求签名的，只能用于导入
CMS
.p7c/.p7m/.p7s
1、p7c只保存证书
2、p7m：signature with enveloped data
3、p7s：时间戳签名文件
    Cryptographic Message Syntax Standard
    A PKCS #7 file can be used to store certificates, which is a SignedData structure without data (just the certificates). The file name extension is usually .p7b, .p7c

    
PKCS #8
    Private-Key Information Syntax Standard.
    Used to carry private certificate keypairs (encrypted or unencrypted).
PKCS #12
    Personal Information Exchange Syntax Standard.
    Defines a file format commonly used to store private keys with accompanying public key certificates, protected with a password-based symmetric key. It is the successor to PFX from Microsoft
DER
    Distinguished Encoding Rules
    A binary format for keys or certificates. It is a message transfer syntax specified by the ITU in X.690.
PEM
    Privacy Enhanced Mail
    
RSA Public Key file (PKCS#1)
Public Key file (PKCS#8)
RSA Private Key file (PKCS#1)
Private Key file (PKCS#8)

ContentInfo ::=SEQUENCE{
    contentType ContentType,
    content
        [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL
}


每一行的开始是对象在文件里的偏移量
d=xx是结构嵌套的深度。知道ASN1结构的人应该知道，每一个SET或者SEQUENCE都会让嵌套深度增加1.  
    hl=xx表示当前类型的header的长度。1=xx表示内容的八进制的长度
    
    
FooProtocol DEFINITIONS ::= BEGIN

    FooQuestion ::= SEQUENCE {
        trackingNumber INTEGER,
        question       IA5String
    }

    FooAnswer ::= SEQUENCE {
        questionNumber INTEGER,
        answer         BOOLEAN
    }

END

myQuestion FooQuestion ::= {
    trackingNumber     5,
    question           "Anybody there?"
}

Example encoded in DER

30 ― type tag indicating SEQUENCE
13 ― length in octets of value that follows
02 ― type tag indicating INTEGER
01 ― length in octets of value that follows
05 ― value (5)
16 ― type tag indicating IA5String 
     (IA5 means the full 7-bit ISO 646 set, including variants, 
      but is generally US-ASCII)
0e ― length in octets of value that follows
41 6e 79 62 6f 64 79 20 74 68 65 72 65 3f ― value ("Anybody there?")

30 13 02 01 05 16 0e 41 6e 79 62 6f 64 79 20 74 68 65 72 65 3f

Superior references

1.2.840.113549.1 - PKCS
1.2.840.113549 - RSADSI
1.2.840 - USA
1.2 - ISO member body
1 - ISO assigned OIDs
Top of OID tree
Subsidiary references (single level)

1.2.840.113549.1.7.1 - data
1.2.840.113549.1.7.2 - signedData
1.2.840.113549.1.7.3 - envelopedData
1.2.840.113549.1.7.4 - signedAndEnvelopedData
1.2.840.113549.1.7.5 - digestedData
1.2.840.113549.1.7.6 - encryptedData

只能出现在SEQUENCE、SET和CHOICE类型的组件中，如果这些结构类型本身也是另一个结构类型的组件，也可以使用。只要不产生歧义，相同的tag数值可以在不同结构中反复使用。
	A-possible-type ::= SET 
	{
		integer 			[0] CHOICE 
		{
			a 		[0] INTEGER,
			b 		[1] INTEGER 
		},
		boolean [1] CHOICE 
		{
			a 		[0] BOOLEAN,
			b 		[1] BOOLEAN
		}
	}
    
    
    如果没有明确地写明tag类，也默认为是context-specific: 
如 Number ::= [0] INTEGER
context-specific是目前最广泛应用的tag class。

private tag，在一家公司或一个国家内唯一标志一个类型，如某公司可能这样扩展传输层PDU：
	RejectTPDU ::= SET 
	{
		destRef 			[0] Reference,
		yr-tu-nr 			[1] TPDUnumber,
		credit 				[2] Credit,
		extended 			[PRIVATE 0] BOOLEAN DEFAULT FALSE 
	}
PRIVATE类的Tag现在也不推荐使用。

结构类型的tag类与他们组件的tag类没有必然关系